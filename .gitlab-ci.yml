image: openjdk:11

variables:
  ANDROID_COMPILE_SDK: "30"
  ANDROID_BUILD_TOOLS: "30.0.3"
  ANDROID_SDK_TOOLS: "7583922"
  GIT_SUBMODULE_STRATEGY: recursive

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1

  # get submodule
  - git submodule sync --recursive
  - git submodule update --init --recursive
  # Here we are installing androidSDK tools from official source,
  # (the key thing here is the url from where you are downloading these sdk tool for command line, so please do note this url pattern there and here as well)
  # after that unzipping those tools and
  # then running a series of SDK manager commands to install necessary android SDK packages that'll allow the app to build
  - wget --output-document=cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  # move to the archive at ANDROID_HOME
  - unzip -d cmdline-tools cmdline-tools.zip
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/cmdline-tools/cmdline-tools/bin/
  - ls
  # Nothing fancy here, just checking sdkManager version
  - sdkmanager --version

  # use yes to accept all licenses
  - yes | sdkmanager --sdk_root=${ANDROID_HOME} --licenses || true
  - sdkmanager --sdk_root=${ANDROID_HOME} "platforms;android-${ANDROID_COMPILE_SDK}"
  - sdkmanager --sdk_root=${ANDROID_HOME} "platform-tools"
  - sdkmanager --sdk_root=${ANDROID_HOME} "build-tools;${ANDROID_BUILD_TOOLS}"

  # Not necessary, but just for surity
  - chmod +x ./gradlew

stages:
  - build
  - deploy

build:
  stage: build
  script:
#  Creating variable
    - export APP_VERSION=V.${CI_BUILD_TAG}
    - export FILE_NAME=app-$APP_VERSION.apk
    
#  Build apk
    # - ./gradlew assembleRelease
    - ./gradlew assembleDebug
    
#  Change file name
    - mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/$FILE_NAME
  artifacts:
    paths:
    - app/build/outputs/
  only:
    - master

deploy:
  stage: deploy
  script:
    - curl \
        -F token="${SLACK_CHANNEL_ACCESS_TOKEN}" \
        -F channels="${SLACK_CHANNEL_ID}" \
        -F initial_comment="Hello team! Here is the latest APK" \
        -F "file=@$(find app/build/outputs/apk/debug -name 'MyApp*')" \
        https://slack.com/api/files.upload
  artifacts:
    paths:
      - app/build/outputs/apk/release
  dependencies:
    - build
  only:
    - master
